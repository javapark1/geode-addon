#!/usr/bin/env bash

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-cluster -vm -key -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

#
# Determeint $TAR_BALL_PATH
#
ROOT_DIR_NAME=$(basename $BASE_DIR)
TOP_DIR="$(dirname "$BASE_DIR")"
TAR_BALL_GZ_NAME=$ROOT_DIR_NAME.tar.gz
TAR_BALL_GZ_PATH=$BASE_DIR/bundles/$TAR_BALL_GZ_NAME

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $GEODE_ADDON_WORKSPACE

WARNING:
   This command overwrites existing files in the VMs. Symbolic links may not
   work and not supported.

NAME
   $EXECUTABLE - Copy the specified file or directory to the same path in the
                 specified VMs in geode-addon environment

SYNOPSIS
   $EXECUTABLE [-cluster cluster_name] [-key private_key_file] [-vm comma_separated_hosts] [-?] file_path

DESCRIPTION
  Copies the specified file or directory to the same path in the specified VMs.
  If the file path is a directory then all of the files in the directory
  are recursively copied.

  If the '-vm' option is not specified, then it copies the specified file to
  the hosts defined by the 'vm.locator.hosts' and 'vm.hosts' properties in the
  etc/cluster.properties file.

OPTIONS

    -cluster cluster_name
              Cluster name.

    -vm comma_separated_hosts
              A list of VM hosts or addresses separated by comma. Spaces NOT allowed.

    -key private_key_file
              Private key file path. To ssh into your VM such as ones on AWS, you may
              to supply your private key file. Normally, the private key file is not
              required if you have set public-key authentication.

    file_path
              File or directory path. Multiple files not supported.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -cluster $CLUSTER file_path
EOF
fi
cat <<EOF

SEE ALSO
EOF
   printSeeAlsoList "vm_*" $EXECUTABLE
   exit
fi

FILE_PATH=${@: -1}
ABS_PATH=$(getAbsPath "$FILE_PATH")
if [ "$ABS_PATH" == "-1" ]; then
   echo "----------------------------------------------------------------"
   echo "WORKSPACE: $GEODE_ADDON_WORKSPACE"
   echo "    ERROR: Invalid path [$FILE_PATH]. Command aborted."
   echo "----------------------------------------------------------------"
   exit 1
fi

# 
# VM cluster
#
if [ "$VM_HOSTS" == "" ]; then
   VM_HOSTS=$(getAllMergedVmHosts)
   echo "----------------------------------------------------------------"
   echo "WORKSPACE: $GEODE_ADDON_WORKSPACE"
   if [ "$VM_HOSTS" == "" ]; then
      echo >&2 "    ERROR: You must specify the '-vm' option or set at least one of the 'vm.locator.hosts' and"
      echo >&2 "           'vm.hosts' properties in etc/cluster.properties. Command aborted."
      exit 1
   else
      echo "     INFO: The '-vm' option undefined. Using the following VM locator and member hosts found"
      echo "           in etc/cluster.properties."
      echo "           $VM_HOSTS"
   fi
   echo "----------------------------------------------------------------"
fi

# Replace , with space
__VM_HOSTS=$(echo "$VM_HOSTS" | sed "s/,/ /g")
DEFAULT_USER=$(whoami)
VM_USER=`getClusterProperty "vm.user" "$DEFAULT_USER"`

if [ "$KEY" == "" ]; then
   KEY=`getClusterProperty "vm.privateKeyFile"`
fi
VM_KEY=""
if [ "$KEY" != "" ]; then 
   if [ ! -f "$KEY" ]; then
      echo >&2 "ERROR: Specified private key does not exist [$KEY]."
      echo >&2 "       Command aborted."
      exit 1
   fi
   VM_KEY="-i $KEY"
fi

# Find all existing and new hosts
EXISTING_HOSTS=
NEW_HOSTS=
THIS_VM_HOSTNAME=`hostname`
COMMAND="if [ -d "$BASE_DIR" ]; then echo true; else echo false; fi"
EXISTING_HOST_COUNT=0
NEW_HOST_COUNT=0
echo "Copy $ABS_PATH to other VMs."
if [ -d $ABS_PATH ]; then
   TO_PATH="$(dirname "$ABS_PATH")"
else
   TO_PATH=$ABS_PATH
fi
for VM_HOST in $__VM_HOSTS; do
   HOSTNAME=`ssh -q -n $VM_KEY $VM_USER@$VM_HOST "hostname"`
   if [ "$HOSTNAME" == "" ]; then
      echo "Invalid host [$VM_HOST]"
      continue
   elif [ "$HOSTNAME" == "$THIS_VM_HOSTNAME" ]; then
      continue
   fi

   echo "   Copying to $VM_HOST..."
   scp -q -r $VM_KEY $ABS_PATH $VM_USER@$VM_HOST:$TO_PATH
done

echo "Copy Complete"
echo ""
