#!/usr/bin/env bash

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-cluster -vm -key -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

#
# Determeint $TAR_BALL_PATH
#
ROOT_DIR_NAME=$(basename $BASE_DIR)
TOP_DIR="$(dirname "$BASE_DIR")"
TAR_BALL_GZ_NAME=$ROOT_DIR_NAME.tar.gz
TAR_BALL_GZ_PATH=$BASE_DIR/bundles/$TAR_BALL_GZ_NAME

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $GEODE_ADDON_WORKSPACE

NAME
   $EXECUTABLE - Download all the log and statistics files from the VMs to the local file system

SYNOPSIS
   $EXECUTABLE [-cluster cluster_name] [-key private_key_file] [-vm comma_separated_hosts] [-mirror] [-?] file_path

DESCRIPTION
   Downloads the log and statistics files from the VMs to the local cluster's
   'log' and 'stats' directories.

   If the '-vm' option is not specified, then it downloads the log and statistics files
   from the hosts defined by the 'vm.locator.hosts' and 'vm.hosts' in the 'etc/cluster.properties'
   file.

OPTIONS

    -cluster cluster_name
              Cluster name.

    -vm comma_separated_hosts
              A list of VM hosts or addresses separated by comma. Spaces NOT allowed.

    -key private_key_file
              Private key file path. To ssh into your VM such as the ones on AWS, you may
              supply your private key file. Normally, the private key file is not
              required if you have set public-key authentication.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -cluster $CLUSTER file_path
EOF
fi
cat <<EOF

SEE ALSO
EOF
   printSeeAlsoList "vm_*" $EXECUTABLE
   exit
fi

VM_ENABLED=`getClusterProperty "vm.enabled" "false"`
if [ "$VM_ENABLED" == "false" ]; then
   echo >&2 "ERROR: Not a VM cluster [$CLUSTER]. To enable VMs, set the 'vm.enabled' property"
   echo >&2 "       in the 'etc/cluster.properties' file."
   exit 1
fi

# 
# VM cluster
#
if [ "$VM_SPECIFIED" == "true" ]; then
   VM_HOSTS=$VM_HOSTS_ARG
else
   VM_HOSTS=$(getAllMergedVmHosts)
fi
if [ "$VM_HOSTS" == "" ]; then
   echo "----------------------------------------------------------------"
   echo "WORKSPACE: $GEODE_ADDON_WORKSPACE"
   if [ "$VM_HOSTS" == "" ]; then
      echo >&2 "    ERROR: You must specify the '-vm' option or set VM_HOSTS in the workspace"
      echo >&2 "           'setenv.sh' file. Command aborted."
      exit 1
   fi
   echo "----------------------------------------------------------------"
fi

# Replace , with space
__VM_HOSTS=$(echo "$VM_HOSTS" | sed "s/,/ /g")
DEFAULT_USER=$(whoami)
VM_USER=`getClusterProperty "vm.user" "$DEFAULT_USER"`

if [ "$KEY" == "" ]; then
   KEY=`getClusterProperty "vm.privateKeyFile"`
fi
VM_KEY=""
if [ "$KEY" != "" ]; then 
   if [ ! -f "$KEY" ]; then
      echo >&2 "ERROR: Specified private key does not exist [$KEY]."
      echo >&2 "       Command aborted."
      exit 1
   fi
   VM_KEY="-i $KEY"
fi

# Find all existing and new hosts
EXISTING_HOSTS=
NEW_HOSTS=
THIS_VM_HOSTNAME=`hostname`
COMMAND="if [ -d "$BASE_DIR" ]; then echo true; else echo false; fi"
EXISTING_HOST_COUNT=0
NEW_HOST_COUNT=0

WORKSPACE=${GEODE_ADDON_WORKSPACE##*/}

echo "VM_GEODE_ADDON_WORKSPACES_HOME/=$VM_GEODE_ADDON_WORKSPACES_HOME/"
FROM_LOG_DIR=$VM_GEODE_ADDON_WORKSPACES_HOME/$WORKSPACE/clusters/$CLUSTER/log
FROM_STATS_DIR=$VM_GEODE_ADDON_WORKSPACES_HOME/$WORKSPACE/clusters/$CLUSTER/stats

if [ ! -d "$LOG_DIR" ]; then
   mkdir -p $LOG_DIR
fi
if [ ! -d "$STATS_DIR" ]; then
   mkdir -p $STATS_DIR
fi


for VM_HOST in $__VM_HOSTS; do
   if [ "$VM_HOST" == "$THIS_VM_HOSTNAME" ]; then
      continue
   fi
   HOSTNAME=`ssh -q -n $VM_KEY $VM_USER@$VM_HOST -o stricthostkeychecking=no "hostname"`
   if [ "$HOSTNAME" == "" ]; then
      echo "Invalid host [$VM_HOST]"
      continue
   elif [ "$HOSTNAME" == "$THIS_VM_HOSTNAME" ]; then
      continue
   fi

   echo "   Downloading $VM_HOST..."
   scp -q -r -o stricthostkeychecking=no $VM_KEY $VM_USER@$VM_HOST:$FROM_LOG_DIR/*.log $LOG_DIR/ 
   scp -q -r -o stricthostkeychecking=no $VM_KEY $VM_USER@$VM_HOST:$FROM_STATS_DIR/*.gfs $STATS_DIR/

done

echo ""
echo "Downloaded directories:"
echo "   $LOG_DIR"
echo "   $STATS_DIR"
echo ""
echo "Download complete."
echo ""
