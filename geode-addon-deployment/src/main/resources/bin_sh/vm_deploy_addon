#!/usr/bin/env bash

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-vm -quiet -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

#
# Determeint $TAR_BALL_PATH
#
ROOT_DIR_NAME=$(basename $BASE_DIR)
TOP_DIR="$(dirname "$BASE_DIR")"
TAR_BALL_GZ_NAME=$ROOT_DIR_NAME.tar.gz
TAR_BALL_GZ_PATH=$GEODE_ADDON_WORKSPACE/bundles/$TAR_BALL_GZ_NAME

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $GEODE_ADDON_WORKSPACE

NAME
   $EXECUTABLE - Deploy the geode-addon distribution to VMs

SYNOPSIS
   $EXECUTABLE [-vm comma_separated_hosts] [-quiet] [-?]

DESCRIPTION
   Deploys the geode-addon distribution to the specified VMs. It first scans
   the VMs and displays the VMs that already have geode-addon installed. It
   then prompt you to optionally overwrite the existing installations. The VMs'
   geode-addon installation directory path is defined by VM_GEODE_ADDON_HOME
   set in the workspace 'setenv.sh' file.

   If the '-vm' option is not specified, then it deploys to the hosts defined
   by the VM_HOSTS environment variable set in the workspace 'setenv.sh' file.
   
   $GEODE_ADDON_WORKSPACE/setenv.sh

OPTIONS
   -vm comma_separated_hosts
             A list of VM hosts or addresses separated by comma. Spaces NOT allowed.

   -quiet
             Quiet mode. Supresses all interactive prompts.

CAUTION
   The -quiet option overwrites existing installations if any.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -cluster $CLUSTER
EOF
fi
cat <<EOF

SEE ALSO
EOF
   printSeeAlsoList "vm_*" $EXECUTABLE
   exit
fi

if [ "$VM_ENABLED" != "true" ]; then
   echo "----------------------------------------------------------------"
   echo "WORKSPACE: $GEODE_ADDON_WORKSPACE"
   echo "    ERROR: The workspace is not a VM workspace. Command aborted."
   echo "----------------------------------------------------------------"
   exit 1 
fi

echo "----------------------------------------------------------------"
echo "WORKSPACE: $GEODE_ADDON_WORKSPACE"
if [ "$VM_HOSTS" == "" ]; then
   echo "    ERROR: Neither '-vm' nor 'VM_HOSTS' defined. Command aborted."
   exit 1
fi
echo "Deploying geode-addon to the following VM hosts:"
echo "    $VM_HOSTS
echo "   
echo "----------------------------------------------------------------"

# Replace , with space
__VM_HOSTS=$(echo "$VM_HOSTS" | sed "s/,/ /g")
DEFAULT_USER=$(whoami)
VM_USER=`getClusterProperty "vm.user" "$DEFAULT_USER"`
VM_KEY=`getClusterProperty "vm.privateKeyFile"`
if [ "$VM_KEY" != "" ]; then 
   VM_KEY="-i $VM_KEY"
fi

# Find all existing and new hosts
EXISTING_HOSTS=
NEW_HOSTS=
THIS_VM_HOSTNAME=`hostname`
echo "VM_GEODE_ADDON_HOME=$VM_GEODE_ADDON_HOME"
COMMAND="if [ -d "$VM_GEODE_ADDON_HOME" ]; then echo true; else echo false; fi"
EXISTING_HOST_COUNT=0
NEW_HOST_COUNT=0
for VM_HOST in $__VM_HOSTS; do
   HOST_NAME=`ssh -q -n $VM_KEY $VM_USER@$VM_HOST -o stricthostkeychecking=no "hostname"`
   if [ "$HOST_NAME" == "$THIS_VM_HOSTNAME" ]; then
      continue
   fi
   DIR_EXISTS=`ssh -q -n $VM_KEY $VM_USER@$VM_HOST -o stricthostkeychecking=no $COMMAND`
   if [ "$DIR_EXISTS" == "true" ]; then
      EXISTING_HOSTS="$EXISTING_HOSTS $VM_HOST"
      let EXISTING_HOST_COUNT=EXISTING_HOST_COUNT+1
   else
      NEW_HOSTS="$NEW_HOSTS $VM_HOST"
      let NEW_HOST_COUNT=NEW_HOST_COUNT+1
   fi
done

echo ""
echo "geode-addon installation found in the following host(s):"
echo "   $EXISTING_HOSTS"
echo ""
echo "geode-addon not found in the following host(s):"
echo "   $NEW_HOSTS"
echo ""
DEPLOYMENT_HOST_COUNT=$NEW_HOST_COUNT
INPUT=
if [ "$QUIET" == "false" ]; then
   if [ "$EXISTING_HOSTS" != "" ]; then
      echo "Do you want to overwrite the existing installations?"
      echo "('overwrite' + Enter to overwrite the installations, other keys to continue.)"
      read INPUT
      echo ""
   fi
   
   OVERWRITE="false"
   if [ "$INPUT" == "overwrite" ]; then
      OVERWRITE="true"
      let DEPLOYMENT_HOST_COUNT=DEPLOYMENT_HOST_COUNT+EXISTING_HOST_COUNT
      echo "This installation will be deployed to both existing and new hosts."
   else
      echo "Existing installations will be skipped."
   fi
   echo "Do you want to continue?"
   echo "('continue' + Enter to continue deployment, other keys to quit.)"
   read INPUT
   echo ""
   # trim string
   INPUT=`echo "$INPUT" | xargs`
   if [ "$INPUT" != "continue" ]; then
      echo "Addon deployment aborted."
      exit
   fi
fi


if [ $DEPLOYMENT_HOST_COUNT -eq 0 ]; then
   echo "No qualified hosts. Command aborted." 
   echo ""
   exit
fi

echo "Total deployment host count: $DEPLOYMENT_HOST_COUNT"
echo "Creating a tar ball..."
ROOT_DIR_NAME=$(basename $GEODE_ADDON_HOME)
TAR_BALL_NAME=$ROOT_DIR_NAME.tar
TAR_BALL_PATH=$GEODE_ADDON_WORKSPACE/bundles/$TAR_BALL_NAME
VM_GEODE_ADDON_HOME_PARENT_DIR="$(dirname "$VM_GEODE_ADDON_HOME")"

pushd $GEODE_ADDON_HOME/.. 
tar czf $TAR_BALL_GZ_PATH $ROOT_DIR_NAME
popd

if [ "$NEW_HOSTS" != "" ]; then
   echo "New Hosts:"
   for VM_HOST in $NEW_HOSTS; do
      echo "   Deploying to $VM_HOST..."
      ssh -q -n $VM_KEY $VM_USER@$VM_HOST -o stricthostkeychecking=no "mkdir -p $VM_GEODE_ADDON_HOME_PARENT_DIR"
      scp -q -o stricthostkeychecking=no $VM_KEY $TAR_BALL_GZ_PATH $VM_USER@$VM_HOST:/tmp
      ssh -q -n $VM_USER@$VM_HOST -o stricthostkeychecking=no "tar -C $VM_GEODE_ADDON_HOME_PARENT_DIR -xzf /tmp/$TAR_BALL_GZ_NAME; rm /tmp/$TAR_BALL_GZ_NAME"
   done
fi

if [ "$EXISTING_HOSTS" != "" ]; then
   echo "Existing Hosts:"
   for VM_HOST in $EXISTING_HOSTS; do
      echo "   Deploying to $VM_HOST..."
      scp -q -o stricthostkeychecking=no $VM_KEY $TAR_BALL_GZ_PATH $VM_USER@$VM_HOST:/tmp
      ssh -q -n $VM_USER@$VM_HOST -o stricthostkeychecking=no "tar -C $VM_GEODE_ADDON_HOME_PARENT_DIR -xzf /tmp/$TAR_BALL_GZ_NAME; rm /tmp/$TAR_BALL_GZ_NAME"
   done
fi
echo "Deployment complete."
echo ""
